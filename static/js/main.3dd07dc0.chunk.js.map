{"version":3,"sources":["components/Employee.js","components/EmployeesList.js","components/EmployeesBirthday.js","App.js","reportWebVitals.js","index.js"],"names":["Employee","id","lastName","firstName","checked","disabled","handleClick","handleChange","className","type","defaultChecked","onClick","e","onChange","EmployeesList","employees","alphabet","split","map","letter","index","empty","document","querySelectorAll","charAt","forEach","each","style","display","EmployeesBirthday","selectedEmployees","groupByMonth","sort","a","b","months","indexOf","birthdayMonth","reduce","r","key","push","length","Object","entries","i","dob","App","useState","setEmployee","setSelectedEmployee","useEffect","axios","get","then","res","employeesData","data","tempEmployees","employee","Date","toLocaleString","day","month","year","sortByLastName","localStorage","getItem","JSON","parse","setItem","stringify","arr","localeCompare","emp","selected","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3dd07dc0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Employee = ({\n  id,\n  lastName,\n  firstName,\n  checked,\n  disabled,\n  handleClick,\n  handleChange,\n}) => {\n  return (\n    <div id={id} className=\"employeeName\">\n      {lastName} {firstName}\n      <input\n        id={id}\n        className=\"employeeCheck\"\n        type=\"checkbox\"\n        disabled={disabled}\n        defaultChecked={checked}\n        onClick={(e) => handleClick(e, id)}\n        onChange={(e) => handleChange(e, id)}\n      />\n    </div>\n  );\n};\n\nexport default Employee;","import React from \"react\";\nimport Employee from \"./Employee\";\n\nconst EmployeesList = ({ employees, handleClick, handleChange }) => {\n  const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n\n  return (\n    <div className=\"container\">\n      {alphabet.map((letter, index) => {\n        return (\n          <div key={index} className=\"employeesByAlphabet\">\n            <strong className=\"letter\">{letter}</strong>\n            <p id={letter} className=\"empty\">\n              ---\n            </p>\n            {employees.map(\n              ({ lastName, firstName, id, checked, disabled }, index) => {\n                const empty = document.querySelectorAll(\".empty\");\n                if (lastName.charAt(0) === letter) {\n                  empty.forEach((each) => {\n                    if (each.id === letter) {\n                      each.style.display = \"none\";\n                    }\n                  });\n                  return (\n                    <Employee\n                      key={index + 1}\n                      id={id}\n                      lastName={lastName}\n                      firstName={firstName}\n                      checked={checked}\n                      disabled={disabled}\n                      handleClick={handleClick}\n                      handleChange={handleChange}\n                    />\n                  );\n                }\n              }\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default EmployeesList","import React from \"react\";\n\nconst EmployeesBirthday = ({ selectedEmployees }) => {\n  const groupByMonth = selectedEmployees\n    .sort((a, b) => {\n      const months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ];\n\n      return months.indexOf(a.birthdayMonth) - months.indexOf(b.birthdayMonth);\n    })\n    .reduce((r, e) => {\n      const key = e.birthdayMonth;\n      if (!r[key]) r[key] = [];\n      r[key].push(e);\n      return r;\n    }, {});\n\n  return (\n    <div className=\"container\">\n      {selectedEmployees.length > 0 ? (\n        Object.entries(groupByMonth).map(([key, value], i) => {\n          return (\n            <ul key={i}>\n              {key}\n              {selectedEmployees.map(\n                ({ lastName, firstName, id, dob, birthdayMonth }, index) => {\n                  if (birthdayMonth === key) {\n                    return (\n                      <li key={index} id={id}>\n                        {lastName} {firstName} - {dob} year\n                      </li>\n                    );\n                  }\n                }\n              )}\n            </ul>\n          );\n        })\n      ) : (\n        <p>No selected employees</p>\n      )}\n    </div>\n  );\n};\n\nexport default EmployeesBirthday","import React, { useEffect, useState } from \"react\";\nimport \"./styles/Employees.css\";\nimport axios from \"axios\";\nimport EmployeesList from \"./components/EmployeesList\";\nimport EmployeesBirthday from \"./components/EmployeesBirthday\";\n\nconst App = () => {\n  const [employees, setEmployee] = useState([]);\n  const [selectedEmployees, setSelectedEmployee] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\")\n      .then((res) => {\n        const employeesData = res.data;\n        const tempEmployees = [];\n\n        for (let i = 0; i < employeesData.length; i++) {\n          const options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n          let employee = {\n            id: employeesData[i].id,\n            firstName: employeesData[i].firstName,\n            lastName: employeesData[i].lastName,\n            dob: new Date(employeesData[i].dob).toLocaleString(\"en\", options),\n            birthdayMonth: new Date(employeesData[i].dob).toLocaleString(\"en\", {\n              month: \"long\",\n            }),\n          };\n          tempEmployees.push(employee);\n        }\n        sortByLastName(tempEmployees);\n        setEmployee(tempEmployees);\n\n        if (localStorage.getItem(\"employees\")) {\n          setEmployee(JSON.parse(localStorage.getItem(\"employees\")));\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"selectedEmployees\")) {\n      setSelectedEmployee(\n        JSON.parse(localStorage.getItem(\"selectedEmployees\"))\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\n      \"selectedEmployees\",\n      JSON.stringify(selectedEmployees)\n    );\n  }, [selectedEmployees]);\n\n  const handleChange = (e, id) => {\n    setEmployee(\n      employees.map((emp) => {\n        if (emp.id === id) {\n          emp.checked = !emp.checked;\n          emp.disabled = !emp.disabled;\n        }\n        return emp;\n      })\n    );\n    localStorage.setItem(\"employees\", JSON.stringify(employees));\n  };\n\n  const handleClick = (e, id) => {\n    employees.map((emp) => {\n      if (emp.id === id) {\n        const selected = {\n          id: emp.id,\n          firstName: emp.firstName,\n          lastName: emp.lastName,\n          dob: emp.dob,\n          birthdayMonth: emp.birthdayMonth,\n        };\n        return setSelectedEmployee([...selectedEmployees, selected]);\n      }\n    });\n  };\n\n  const sortByLastName = (arr) => {\n    arr.sort((a, b) => a.lastName.localeCompare(b.lastName));\n  };\n\n  return (\n    <>\n      <div className=\"list\">\n        <h2>Employees</h2>\n        <EmployeesList\n          employees={employees}\n          handleClick={handleClick}\n          handleChange={handleChange}\n        />\n      </div>\n      <div className=\"birthday\">\n        <h2>Employees birthday</h2>\n        <EmployeesBirthday selectedEmployees={selectedEmployees} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}