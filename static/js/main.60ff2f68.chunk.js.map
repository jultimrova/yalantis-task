{"version":3,"sources":["components/Employee.js","components/EmployeesList.js","components/EmployeesBirthday.js","App.js","reportWebVitals.js","index.js"],"names":["Employee","id","lastName","firstName","checked","disabled","handleClick","handleChange","className","type","defaultChecked","onClick","e","onChange","EmployeesList","employees","alphabet","split","map","letter","index","empty","document","querySelectorAll","charAt","forEach","each","style","display","EmployeesBirthday","selectedEmployees","groupByMonth","sort","a","b","months","indexOf","birthdayMonth","reduce","r","key","push","length","Object","entries","i","dob","App","useState","setEmployee","setSelectedEmployee","useEffect","axios","get","then","res","employeesData","data","tempEmployees","employee","Date","toLocaleString","day","month","year","sortByLastName","localStorage","getItem","JSON","parse","setItem","stringify","arr","localeCompare","emp","selected","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.60ff2f68.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Employee = ({id, lastName, firstName, checked, disabled, handleClick, handleChange}) => {\r\n    return (\r\n        <div id={id} className='employeeName'>{lastName} {firstName}\r\n            <input id={id}\r\n                   className='employeeCheck'\r\n                   type='checkbox'\r\n                   disabled={disabled}\r\n                   defaultChecked={checked}\r\n                   onClick={e => handleClick(e, id)}\r\n                   onChange={e => handleChange(e, id)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Employee","import React from 'react'\r\nimport Employee from './Employee'\r\n\r\nconst EmployeesList = ({employees, handleClick, handleChange}) => {\r\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')\r\n\r\n    return (\r\n        <div className='container'>\r\n            {alphabet.map((letter, index) => {\r\n                return (\r\n                    <div key={index} className='employeesByAlphabet'>\r\n                        <strong className='letter'>{letter}</strong>\r\n                        <p id={letter} className='empty'>---</p>\r\n                        {employees.map(({lastName, firstName, id, checked, disabled}, index) => {\r\n                            const empty = document.querySelectorAll('.empty')\r\n                            if (lastName.charAt(0) === letter) {\r\n                                empty.forEach(each => {\r\n                                    if (each.id === letter) {\r\n                                        each.style.display = 'none'\r\n                                    }\r\n                                })\r\n                                return <Employee key={index + 1} id={id}\r\n                                                 lastName={lastName} firstName={firstName}\r\n                                                 checked={checked} disabled={disabled}\r\n                                                 handleClick={handleClick} handleChange={handleChange}\r\n                                />\r\n                            }\r\n                        })}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeesList","import React from 'react'\r\n\r\nconst EmployeesBirthday = ({selectedEmployees}) => {\r\n    const groupByMonth = selectedEmployees\r\n        .sort((a, b) => {\r\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n\r\n        return months.indexOf(a.birthdayMonth) -  months.indexOf(b.birthdayMonth)\r\n    })\r\n        .reduce((r, e) => {\r\n        const key = e.birthdayMonth\r\n        if (!r[key]) r[key] = []\r\n        r[key].push(e)\r\n        return r\r\n    }, {})\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {selectedEmployees.length > 0 ?\r\n                Object.entries(groupByMonth).map(([key, value], i) => {\r\n                    return <ul key={i}>{key}\r\n                        {selectedEmployees.map(({lastName, firstName, id, dob, birthdayMonth}, index) => {\r\n                            if (birthdayMonth === key) {\r\n                                return <li key={index} id={id}>{lastName} {firstName} - {dob} year</li>\r\n                            }\r\n                        })\r\n                        }\r\n                    </ul>\r\n                }) : <p>No selected employees</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeesBirthday","import React, {useEffect, useState} from 'react'\nimport './styles/Employees.css'\nimport axios from 'axios'\nimport EmployeesList from './components/EmployeesList'\nimport EmployeesBirthday from './components/EmployeesBirthday'\n\nconst App = () => {\n    const [employees, setEmployee] = useState([])\n    const [selectedEmployees, setSelectedEmployee] = useState([])\n\n    useEffect(() => {\n        axios.get('https://yalantis-react-school-api.yalantis.com/api/task0/users')\n            .then(res => {\n                const employeesData = res.data\n                const tempEmployees = []\n\n                for (let i = 0; i < employeesData.length; i++) {\n                    const options = {day: 'numeric', month: 'long', year: 'numeric'}\n                    let employee = {\n                        id: employeesData[i].id,\n                        firstName: employeesData[i].firstName,\n                        lastName: employeesData[i].lastName,\n                        dob: new Date(employeesData[i].dob).toLocaleString('en', options),\n                        birthdayMonth: new Date(employeesData[i].dob).toLocaleString('en', {month: 'long'})\n                    }\n                    tempEmployees.push(employee)\n                }\n                sortByLastName(tempEmployees)\n                setEmployee(tempEmployees)\n\n                if (localStorage.getItem('employees')) {\n                    setEmployee(JSON.parse(localStorage.getItem('employees')))\n                }\n            })\n    }, [])\n\n    useEffect(() => {\n        if (localStorage.getItem('selectedEmployees')) {\n            setSelectedEmployee(JSON.parse(localStorage.getItem('selectedEmployees')))\n        }\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem('selectedEmployees', JSON.stringify(selectedEmployees))\n    }, [selectedEmployees])\n\n    const handleChange = (e, id) => {\n        setEmployee(employees.map(emp => {\n            if (emp.id === id) {\n                emp.checked = !emp.checked\n                emp.disabled = !emp.disabled\n            }\n            return emp\n        }))\n        localStorage.setItem('employees', JSON.stringify(employees))\n    }\n\n    const handleClick = (e, id) => {\n        employees.map(emp => {\n            if (emp.id === id) {\n                const selected = {\n                    id: emp.id,\n                    firstName: emp.firstName,\n                    lastName: emp.lastName,\n                    dob: emp.dob,\n                    birthdayMonth: emp.birthdayMonth\n                }\n                return setSelectedEmployee([...selectedEmployees, selected])\n            }\n        })\n    }\n\n    const sortByLastName = (arr) => {\n        arr.sort((a, b) => a.lastName.localeCompare(b.lastName))\n    }\n\n    return <>\n        <div className='list'>\n            <h2>Employees</h2>\n            <EmployeesList employees={employees} handleClick={handleClick} handleChange={handleChange}/>\n        </div>\n        <div className='birthday'>\n            <h2>Employees birthday</h2>\n            <EmployeesBirthday selectedEmployees={selectedEmployees}/>\n        </div>\n    </>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals();\n"],"sourceRoot":""}